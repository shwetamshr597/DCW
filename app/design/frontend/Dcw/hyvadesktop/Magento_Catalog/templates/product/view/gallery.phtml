<?php
/**
 * Hyvä Themes - https://hyva.io
 * Copyright © Hyvä Themes 2020-present. All rights reserved.
 * This product is licensed per Magento install
 * See https://hyva.io/license
 */

declare(strict_types=1);

use Hyva\Theme\Model\ViewModelRegistry;
use Hyva\Theme\ViewModel\HeroiconsOutline;
use Magento\Catalog\Block\Product\View\Gallery;
use Magento\Catalog\Helper\Image;
use Magento\Framework\Escaper;

/** @var Escaper $escaper */
/** @var Gallery $block */
/** @var ViewModelRegistry $viewModels */

/** @var HeroiconsOutline $heroicons */
$heroicons = $viewModels->require(HeroiconsOutline::class);

$images = $block->getGalleryImages()->getItems();
$mainImage = current(array_filter($images, [$block, 'isMainImage']));

if (!empty($images) && empty($mainImage)) {
    $mainImage = reset($images);
}

/** @var Image $helper */
$helper = $block->getData('imageHelper');
$mainImageData = $mainImage ?
    $mainImage->getData('medium_image_url') :
    $helper->getDefaultPlaceholderUrl('image');

$smallWidth = $block->getImageAttribute('product_page_image_small', 'width', 90);
$smallHeight = $block->getImageAttribute('product_page_image_small', 'height', 90);
$mediumWidth = $block->getImageAttribute('product_page_image_medium', 'width', 700);
$mediumHeight = $block->getImageAttribute('product_page_image_medium', 'height', 700);

$productName = $block->getProduct()->getName();

$designerToolBlock= $block->getLayout()->createBlock(\Dcw\DesignerTool\Block\Index::class);
$mediaUrl = $designerToolBlock->getMediaUrl();
$product = $block->getProduct();

?>

<div id="gallery"
     x-data="initGallery()"
     x-init="initActive(); $nextTick(() => calcPageSize())"
     x-bind="eventListeners"
     class="order-1 w-full md:w-5/12 lg:w-1/2 md:h-auto relative" :class="{'expand-img': fullscreen}"
    >
    <!-- <div x-data="{ sticky: false }" x-init="window.addEventListener('scroll', () => { sticky = window.pageYOffset >= $refs.middleSection.offsetTop })">
        <div class="middle-section" :class="{ 'sticky': sticky }" x-ref="middleSection"> -->
    <div>
        <div class="middle-section">    
            <div class="">
            <div :class="{'w-full h-full fixed block top-0 left-0 bg-white z-50 flex expand-img': fullscreen}" 
            > 
                <div class="absolute top-0 right-0 pt-4 pr-4">
                    <button @click="fullscreen = false; $nextTick(() => calcPageSize())"
                            type="button"
                            class="hidden text-gray-400 hover:text-gray-500 focus:outline-none focus:text-gray-500
                                transition ease-in-out duration-150 img-pdpclose"
                            :class="{ 'hidden': !fullscreen, 'block': fullscreen }"
                            aria-label="Close"
                    >
                        <?= $heroicons->xHtml(); ?>
                    </button>
                </div>
                <div class="relative self-center w-full"
                     x-transition:enter="ease-out duration-500"
                     x-transition:enter-start="opacity-0"
                     x-transition:enter-end="opacity-100"
                >
                    <div class="relative mb-6 prod_slider" x-data="{
                        handleMouseMove(event) {
                            // Zoom Image
                            const img = event.target;
                            const preview = document.querySelector('#preview');
                            preview.style.backgroundImage = `url(${img.src})`;
                            const x = preview.offsetWidth / 210;
                            const y = preview.offsetHeight / 210;
                            preview.style.backgroundSize = `${img.width * x}px ${img.height * y}px`;
                            const posX = event.offsetX;
                            const posY = event.offsetY;
                            const lens = document.querySelector('.zoom-lens');
                            const lensSize = lens.offsetWidth; // or lens.offsetHeight, assuming it's a square
                            const bgPosX = -((posX - lensSize / 2) * x);
                            const bgPosY = -((posY - lensSize / 2) * y);
                            const maxPosX = -(img.width * x - preview.offsetWidth);
                            const maxPosY = -(img.height * y - preview.offsetHeight);
                            const clampedX = Math.max(maxPosX, Math.min(0, bgPosX));
                            const clampedY = Math.max(maxPosY, Math.min(0, bgPosY));
                            preview.style.backgroundPosition = `${clampedX}px ${clampedY}px`;
                            preview.classList.add('active');

                            // Zoom Lens
                            const l1 = event.offsetX - lensSize / 2;
                            const l2 = event.offsetY - lensSize / 2;
                            const imgWidth = img.width;
                            const imgHeight = img.height;
                            const maxClampedX = Math.max(0, Math.min(imgWidth - lensSize, l1));
                            const maxClampedY = Math.max(0, Math.min(imgHeight - lensSize, l2));
                            lens.style.left = maxClampedX + 'px';
                            lens.style.top = maxClampedY + 'px';
                            lens.classList.remove('opacity-0');
                        },
                        handleMouseOut(event) {
                            const lens = document.querySelector('.zoom-lens');
                            const preview = document.querySelector('#preview');
                            preview.style.backgroundImage = 'none';
                            lens.classList.add('opacity-0');
                            preview.classList.remove('active');
                        }
                    }">
                            <div class="relative" x-on:mouseout="handleMouseOut">
                        <?php
                        /**
                         * The first image is a placeholder that determines the
                         * aspect ratio for the gallery. It will be hidden as
                         * soon as JS is loaded, but will keep reserving the
                         * necessary space in the layout for the other (absolute positioned)
                         * images. Hence, `opacity-0` instead of `x-show` or `hidden`
                         */
                        ?>
                        <img
                            alt="main product photo"
                            title="<?= $escaper->escapeHtmlAttr($productName) ?>"
                            class="object-cver w-full h-auto max-h-screen-75"
                            :class="'opacity-0'"
                            src="<?= /* @noEscape */ $mainImageData ?>"
                            width="<?= /* @noEscape */ $mediumWidth ?>"
                            height="<?= /* @noEscape */ $mediumHeight ?>"
                            itemprop="image"
                            @click="fullscreen = true; $nextTick(() => calcPageSize())"
                        />
                        <template x-for="(image, index) in images" :key="index">                            
                            <img
                                :alt="image.caption || '<?= $escaper->escapeJs($productName) ?>'"
                                :title="image.caption || '<?= $escaper->escapeJs($productName) ?>'"
                                @click="fullscreen = true; $nextTick(() => calcPageSize())"
                                class="absolute inset-0 object-cover w-full m-auto max-h-screen-75 zoom_img"
                                width="<?= /* @noEscape */ $mediumWidth ?>"
                                height="<?= /* @noEscape */ $mediumHeight ?>"
                                :loading="active!==index ? 'lazy' : 'eager'"
                                :src="fullscreen ? image.full : image.img"
                                x-transition.opacity.duration.500ms x-show="active===index"
                                x-on:mousemove="handleMouseMove"
                            />                                                      
                        </template> 
                        <div class="zoom-lens absolute opacity-0" x-on:mouseout="handleMouseOut"></div>       </div>               
                        <!-- <div id="preview" x-bind:style="previewStyle"></div> -->

                        <div class="absolute inset-0 hidden w-full h-full bg-white nonmobile"
                             :class="{ 'hidden': activeVideoType !== 'youtube' }"
                             x-transition.opacity.duration.500ms x-show="
                                 images[active].type === 'video' && activeVideoType === 'youtube'
                             "
                        >
                            <div id="youtube-player" class="w-full h-full"></div>
                        </div>
                        <div class="absolute inset-0 hidden w-full h-full bg-white"
                             :class="{ 'hidden': activeVideoType !== 'vimeo' }"
                             x-transition.opacity.duration.500ms x-show="
                                 images[active].type === 'video' && activeVideoType === 'vimeo'
                             "
                        >
                            <div id="vimeo-player" class="w-full h-full"></div>
                        </div>
                    </div>
                </div>
                <div @resize.window.debounce="calcPageSize(); $nextTick(() => calcActive())">
                    <div
                        id="thumbs"
                        class="flex items-center"
                        :class="{ 'fixed justify-center bottom-0 left-0 right-0 mx-6': fullscreen }"
                        style="min-height: 100px;"
                    >
                        <button
                            aria-label="<?= $escaper->escapeHtml(__('Previous')) ?>"
                            tabindex="-1"
                            class="left-arrow mr-4 text-black rounded-full outline-none focus:outline-none flex-none"
                            :class="{ 'opacity-25 pointer-events-none' : activeSlide === 0, 'hidden' : !isSlider }"
                            @click="scrollPrevious"
                        ><?= $heroicons->chevronLeftHtml() ?></button>
                        <div class="js_thumbs_slides thumbs-wrapper relative flex flex-nowrap w-full overflow-auto js_slides snap md:px-1 xl:px-2"
                             x-ref="jsThumbSlides"
                             @scroll.debounce="calcPageSize(); calcActive()"
                        >
                            <template x-for="(image, index) in images" :key="index">
                                <div class="js_thumbs_slide flex shrink-0 mb-2 mr-2 lg:mr-4 last:mr-0">
                                    <a href="#" @click.prevent="setActive(index);"
                                       class="block border border-gray-300 hover:border-primary focus:border-primary"
                                       :class="{'border-primary': active === index}"
                                    >
                                        <img :src="image.thumb"
                                             :alt="image.caption || '<?= $escaper->escapeJs($productName) ?>'"
                                             :title="image.caption || '<?= $escaper->escapeJs($productName) ?>'"
                                             width="<?= /* @noEscape */ $smallWidth ?>"
                                             height="<?= /* @noEscape */ $smallHeight ?>"
                                        />
                                    </a>
                                </div>
                            </template>
                        </div>
                        <button
                            aria-label="<?= $escaper->escapeHtml(__('Next')) ?>"
                            tabindex="-1"
                            class="right-arrow ml-4 text-black rounded-full outline-none focus:outline-none flex-none"
                            :class="{ 'opacity-25 pointer-events-none' : activeSlide >= itemCount-pageSize, 'hidden' : !isSlider }"
                            @click="scrollNext"
                        ><?= $heroicons->chevronRightHtml() ?></button>
                    </div>
                </div>
            </div>
                </div>


            <?php if ((!empty($product->getPdpIcon1()) && $product->getPdpIcon1() != 'no_selection') ||
                (!empty($product->getPdpIcon2()) && $product->getPdpIcon2() != 'no_selection') ||
                (!empty($product->getPdpIcon3()) && $product->getPdpIcon3() != 'no_selection') ||
                (!empty($product->getPdpIcon4()) && $product->getPdpIcon4() != 'no_selection') ||
                (!empty($product->getPdpIcon5()) && $product->getPdpIcon5() != 'no_selection') ||
                (!empty($product->getPdpIcon6()) && $product->getPdpIcon6() != 'no_selection')) {?>
                <div class="pdp_icon_container">
                             <?php
                                if (!empty($product->getPdpIcon1()) && $product->getPdpIcon1() != 'no_selection') {
                                    $pdp_icon_1 = $mediaUrl.'catalog/product'.$product->getResource()
                                    ->getAttribute('pdp_icon_1')->getFrontend()->getValue($product);
                                    ?>
                    <div class="">
                        <img src="<?= /* @noEscape */ $pdp_icon_1;?>" alt="pdp-icons" title="pdp-icons" />
                    </div>
                                <?php }?>
                             <?php
                                if (!empty($product->getPdpIcon2()) && $product->getPdpIcon2() != 'no_selection') {
                                    $pdp_icon_2 = $mediaUrl.'catalog/product'.$product->getResource()
                                    ->getAttribute('pdp_icon_2')->getFrontend()->getValue($product);
                                    ?>
                    <div class="">
                        <img src="<?= /* @noEscape */ $pdp_icon_2;?>" alt="pdp-icons" title="pdp-icons" />
                    </div>
                                <?php }?>
                             <?php
                                if (!empty($product->getPdpIcon3()) && $product->getPdpIcon3() != 'no_selection') {
                                    $pdp_icon_3 = $mediaUrl.'catalog/product'.$product->getResource()
                                    ->getAttribute('pdp_icon_3')->getFrontend()->getValue($product);
                                    ?>
                    <div class="">
                    <img src="<?= /* @noEscape */ $pdp_icon_3;?>" alt="pdp-icons" title="pdp-icons" />
                    </div>
                                <?php }?>
                             <?php
                                if (!empty($product->getPdpIcon4()) && $product->getPdpIcon4() != 'no_selection') {
                                    $pdp_icon_4 = $mediaUrl.'catalog/product'.$product->getResource()
                                    ->getAttribute('pdp_icon_4')->getFrontend()->getValue($product);
                                    ?>
                    <div class="">
                    <img src="<?= /* @noEscape */ $pdp_icon_4;?>" alt="pdp-icons" title="pdp-icons" />
                    </div>
                                <?php }?>
                             <?php
                                if (!empty($product->getPdpIcon5()) && $product->getPdpIcon5() != 'no_selection') {
                                    $pdp_icon_5 = $mediaUrl.'catalog/product'.$product->getResource()
                                    ->getAttribute('pdp_icon_5')->getFrontend()->getValue($product);
                                    ?>
                    <div class="">
                    <img src="<?= /* @noEscape */ $pdp_icon_5;?>" alt="pdp-icons" title="pdp-icons" />
                    </div>
                                <?php }?>
                             <?php
                                if (!empty($product->getPdpIcon6()) && $product->getPdpIcon6() != 'no_selection') {
                                    $pdp_icon_6 = $mediaUrl.'catalog/product'.$product->getResource()
                                    ->getAttribute('pdp_icon_6')->getFrontend()->getValue($product);
                                    ?>
                    <div class="">
                    <img src="<?= /* @noEscape */ $pdp_icon_6;?>" alt="pdp-icons" title="pdp-icons" />
                    </div>
                                <?php }?>
            </div>
            <?php }?>

            <?php if(!empty($block->getProduct()->getDesignerTools())){?>
                <div class="pdp_custom_design flex items-center justify-between py-6 px-10 w-full mt-10">
                    <div class="pdp_custom_design_left flex items-center"><img src="<?php echo $this->getViewFileUrl('images/pdp_icon-1.png'); ?>" alt="pdp_icon-1" width="" height=""> 
                        <span class="pl-6 text-size24 font-medium text-custom-white">Want A Custom Design?</span>
                    </div>
                    <div class="pdp_custom_design_right">
                        <a href="javascript:void(0)" @click="customDesignClick"
                            class="bg-custom-white rounded-md text-size14 font-semibold text-custom-blue inline-block">
                            Try Our Flooring Designer
                        </a>
                    </div>        
                </div>
                <script>
                function customDesignClick(){
                    var child_id = document.querySelector('input[name="selected_option_child_id"]').value; 
                    setCookie('designer_tool_id','<?= /* @noEscape */ $block->getProduct()->getId()?>_'+child_id)
                    var customDesignUrl = '<?= /* @noEscape */ $block->getUrl('designer')?>?id=<?= /* @noEscape */ $block
                    ->getProduct()->getId()?>';
                    window.location.href = customDesignUrl;
                }

                function setCookie(cName, cValue, expDays = 30) {
                    let date = new Date();
                    date.setTime(date.getTime() + (expDays * 24 * 60 * 60 * 1000));
                    const expires = "expires=" + date.toUTCString();
                    document.cookie = cName + "=" + cValue + "; " + expires + "; path=/";
                }
                </script>
            <?php }?>
            <!-- <div id="preview"></div>             -->
       
        </div>
    </div>
    
</div>
<script>
    function initGallery () {
        return {
            "active": 0,
            "videoData": {},
            "activeVideoType": false,
            "autoplayVideo": false,
            "loopVideo": true,
            "relatedVideos": false,
            "vimeoPlayer": null,
            "fullscreen": false,
            "isSlider": false,
            "initialImages": <?= /* @noEscape */ $block->getGalleryImagesJson() ?>,
            "images": <?= /* @noEscape */ $block->getGalleryImagesJson() ?>,
            "appendOnReceiveImages": <?=
                $block->getVar('gallery_switch_strategy', 'Magento_ConfigurableProduct') === 'append' ? 'true' : 'false'
            ?>,
            "activeSlide": 0,
            "itemCount": 0,
            "pageSize": 4,
            "pageFillers": 0,
            receiveImages(images) {
                if (this.appendOnReceiveImages) {
                    const initialUrls = this.initialImages.map(image => image.full);
                    const newImages = images.filter(image => ! initialUrls.includes(image.full));
                    this.images = [].concat(this.initialImages, newImages);
                    this.setActive(newImages.length ? this.initialImages.length : 0);
                } else {
                    this.images = images;
                    this.setActive(0);
                }
            },
            resetGallery() {
                this.images = this.initialImages;
                this.setActive(0);
            },
            initActive() {
                let active = this.images.findIndex(function(image) {
                    return image.isMain === true
                });
                if (active === -1) {
                    active = 0;
                }
                this.setActive(active);
            },
            setActive(index) {
                this.active = index;
                if (window.youtubePlayer) {
                    window.youtubePlayer.stopVideo();
                }
                if (this.vimeoPlayer) {
                    this.vimeoPlayer.contentWindow.postMessage(JSON.stringify({"method": "pause"}), "*");
                }
                if (this.images[index].type === 'video') {
                    this.activateVideo();
                }
            },
            activateVideo() {
                const videoData = this.getVideoData();

                if (!videoData) { return }

                this.activeVideoType = videoData.type;

                if (videoData.type === "youtube") {
                    if (!window.youtubePlayer) {
                        this.initYoutubeAPI(videoData);
                    } else {
                        window.youtubePlayer.loadVideoById(videoData.id);
                    }

                } else if (videoData.type === "vimeo") {
                    this.initVimeoVideo(videoData);
                }
            },
            getVideoData() {
                const videoUrl = this.images[this.active] && this.images[this.active].videoUrl;

                if (!videoUrl) { return }

                let id,
                    type,
                    youtubeRegex,
                    vimeoRegex,
                    useYoutubeNoCookie = false;

                if (videoUrl.match(/youtube\.com|youtu\.be|youtube-nocookie.com/)) {
                    id = videoUrl.replace(/^\/(embed\/|v\/)?/, '').replace(/\/.*/, '');
                    type = 'youtube';

                    youtubeRegex = /^.*(?:(?:youtu\.be\/|v\/|vi\/|u\/\w\/|embed\/)|(?:(?:watch)?\?v(?:i)?=|\&v(?:i)?=))([^#\&\?]*).*/;
                    id = videoUrl.match(youtubeRegex)[1];

                    if (videoUrl.match(/youtube-nocookie.com/)) {
                        useYoutubeNoCookie = true;
                    }
                } else if (videoUrl.match(/vimeo\.com/)) {
                    type = 'vimeo';
                    vimeoRegex = new RegExp(['https?:\\/\\/(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)',
                        '?|groups\\/([^\\/]*)\\/videos\\/|album\\/(\\d+)\\/video\\/|video\\/|)(\\d+)(?:$|\\/|\\?)'
                    ].join(''));
                    id = videoUrl.match(vimeoRegex)[3];
                }

                return id ? {
                    id: id, type: type, useYoutubeNoCookie: useYoutubeNoCookie
                } : false;
            },
            initYoutubeAPI(videoData) {
                if (document.getElementById('loadYoutubeAPI')) {
                    return;
                }
                const params = {};
                const loadYoutubeAPI = document.createElement('script');
                loadYoutubeAPI.src = 'https://www.youtube.com/iframe_api';
                loadYoutubeAPI.id = 'loadYoutubeAPI';
                const firstScriptTag = document.getElementsByTagName('script')[0];
                firstScriptTag.parentNode.insertBefore(loadYoutubeAPI, firstScriptTag);

                const host = (videoData.useYoutubeNoCookie) ?
                    'https://www.youtube-nocookie.com' :
                    'https://www.youtube.com';

                if (this.autoplayVideo) {
                    params.autoplay = this.autoplayVideo;
                }
                if (!this.relatedVideos) {
                    params.rel = 0;
                }
                const fireYoutubeAPI = document.createElement('script');
                fireYoutubeAPI.innerHTML = `function onYouTubeIframeAPIReady() {
                    window.youtubePlayer = new YT.Player('youtube-player', {
                        host: '${host}',
                        videoId: '${videoData.id}',
                        playerVars: ${JSON.stringify(params)},
                    });
                }`;
                firstScriptTag.parentNode.insertBefore(fireYoutubeAPI, firstScriptTag);
            },
            initVimeoVideo(videoData) {
                let
                    additionalParams = '',
                    src;

                const timestamp = new Date().getTime();
                const vimeoContainer = document.getElementById("vimeo-player");
                const videoId = videoData.id;

                if (!vimeoContainer || !videoId) return;

                if (this.autoplayVideo) {
                    additionalParams += '&autoplay=1';
                }

                if (this.loopVideo) {
                    additionalParams += '&loop=1';
                }
                src = 'https://player.vimeo.com/video/' +
                    videoId + '?api=1&player_id=vimeo' +
                    videoId +
                    timestamp +
                    additionalParams;
                vimeoContainer.innerHTML =
                    `<iframe id="${'vimeo' + videoId + timestamp}"
                        src="${src}"
                        width="640" height="360"
                        webkitallowfullscreen
                        mozallowfullscreen
                        allowfullscreen
                        referrerPolicy="origin"
                        allow="autoplay"
                        class="object-center w-full h-full object-fit"
                     />`;

                this.vimeoPlayer = vimeoContainer.childNodes[0];
            },
            getSlider() {
                return this.$refs.jsThumbSlides;
            },
            calcPageSize() {
                const slider = this.getSlider();
                if (slider) {
                    const slideEl = slider.querySelector('.js_thumbs_slide'),
                        marginRight = parseInt(window.getComputedStyle(slideEl).marginRight);

                    this.itemCount = slider.querySelectorAll('.js_thumbs_slide').length;
                    this.pageSize = Math.round(slider.clientWidth / (slideEl.clientWidth + marginRight));
                    this.pageFillers = (
                        this.pageSize * Math.ceil(this.itemCount / this.pageSize)
                    ) - this.itemCount;

                    this.isSlider = ((slider.clientWidth - (this.itemCount * (slideEl.clientWidth + marginRight))) < 0);
                }
            },
            calcActive() {
                const slider = this.getSlider();
                if (slider) {
                    const sliderItems = this.itemCount + this.pageFillers;
                    const calculatedActiveSlide = slider.scrollLeft / (slider.scrollWidth / sliderItems);
                    this.activeSlide = Math.round(calculatedActiveSlide / this.pageSize) * this.pageSize;
                }
            },
            scrollPrevious() {
                this.scrollTo(this.activeSlide - this.pageSize);
            },
            scrollNext() {
                this.scrollTo(this.activeSlide + this.pageSize);
            },
            scrollTo(idx) {
                const slider = this.getSlider();
                if (slider) {
                    const slideWidth = slider.scrollWidth / (this.itemCount + this.pageFillers);
                    slider.scrollLeft = Math.floor(slideWidth) * idx;
                    this.activeSlide = idx;
                }
            },
            eventListeners: {
                ['@keydown.window.escape']() {
                    this.fullscreen = false
                },
                ['@update-gallery.window'](event) {
                    this.receiveImages(event.detail);
                },
                ['@reset-gallery.window'](event) {
                    this.resetGallery();
                }
            }
        }
     }

    // const body = document.querySelector('body');
    // window.addEventListener('scroll', () => {
    //   body.classList.toggle('sticky', window.pageYOffset > 0);
    // });

      // const middleSection = document.querySelector('.middle-section');
      // window.addEventListener('scroll', () => {
      //     if (middleSection.classList.contains('sticky')) {
      //       document.body.classList.add('sticky');
      //     }
      //     else{
      //       document.body.classList.remove('sticky');
      //     }
      // });
            
</script>