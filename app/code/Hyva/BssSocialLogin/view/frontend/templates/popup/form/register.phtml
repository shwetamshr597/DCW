<?php
/**
 * BSS Commerce Co.
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the EULA
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://bsscommerce.com/Bss-Commerce-License.txt
 *
 * @category   BSS
 * @package    Hyva_BssSocialLogin
 * @author     Extension Team
 * @copyright  Copyright (c) 2022 BSS Commerce Co. ( http://bsscommerce.com )
 * @license    http://bsscommerce.com/Bss-Commerce-License.txt
 */
?>
<?php
//  @codingStandardsIgnoreFile

use Magento\Customer\Helper\Address;
use Magento\Customer\Block\Widget\Dob;
use Magento\Customer\Block\Widget\Gender;
use Magento\Customer\Block\Widget\Taxvat;
use Magento\Framework\Escaper;
use Bss\SocialLogin\Block\SocialLogin\Create;
use Hyva\Theme\Model\ViewModelRegistry;
use Hyva\BssSocialLogin\ViewModels\Helper as ModuleViewModel;

/** @var Create $block */
/** @var Escaper $escaper */
/** @var ViewModelRegistry $viewModels */

$moduleViewModel = $viewModels->require(ModuleViewModel::class);
$checkButtonLogin = $moduleViewModel->checkButtonLogin();
$objectManager = \Magento\Framework\App\ObjectManager::getInstance();
$socialblock  = $objectManager->get('\Bss\SocialLogin\Block\SocialLogin');
?>
<div class="block-new-customer social_login margin" >
    <h2 id="authenticate-new-customer" class="text-size18 font-medium text-darkblack">
        <?= $escaper->escapeHtml(__('Register With')) ?>
    </h2>
    <div class="block-content">
        <?php if ($socialblock->hasButtons()) : ?>
                <div id="add_button_register_byclass" x-data="bssButtonSocial()" x-ref="registerSocialButton">
                    <div class="">
                        <div class="sociallogin-buttons">
                            <ul class="sociallogin-clearfix flex flex-wrap">
                                <?php $i = 1 ; foreach ($socialblock->getPreparedButtons() as $button) : ?>
                                    <li class="w-full text-size14 font-medium text-darkblack relative sociallogin-button <?php echo $button['type']; ?>"  <?php if ($i > $socialblock->showLimit()) :
                                        ?>  style="display: none;" <?php
                                    endif; ?> title="<?php echo __($button['register_text']); ?>">
                                        <a class="sociallogin-button-link sociallogin-button-click" id="sociallogin-button-click" rel="nofollow"
                                            href="javascript:void(0);" data-href="<?php echo $button['href']; ?>"
                                            data-width="<?php echo $button['popup_width']; ?>"
                                            data-height="<?php echo $button['popup_height']; ?>"
                                            x-ref="<?php echo $button['type']; ?>"
                                            @click="popupSocial($refs.<?php echo $button['type']; ?>)">
                                            <span class="sociallogin-button-auto">
                                                <span class="sociallogin-button-icon">
                                                    <?php echo !empty($button['image']) ? '<img class="inline-block h-8 w-8" src="' . $button['image'] . '" />' : ''; ?>
                                                </span>
                                                <?php if ($button['register_text'] != '') : ?>
                                                    <span class="sociallogin-button-text"><?php echo __($button['login_text']); ?></span>
                                                <?php endif ?>
                                            </span>
                                        </a>
                                    </li>
                                    <?php ($i > $socialblock->showLimit())? $show_more = true : $show_more = false; ?>
                                    <?php $i++;
                                endforeach; ?>
                            </ul>
                            <p class="or">or</p>
                            <?php if ($show_more) : ?>
                                <div class="sociallogin-showmore flex cursor-pointer"
                                        @click ="renderShowmore($refs.registerSocialButton)"
                                        id="showmore-button">
                                    <div class="showmore-button"></div>
                                    <span class="showmore-button-text">Show more</span>
                                </div>
                            <?php endif; ?>
                        </div>
                    </div>
                    <div style="clear: both;"></div>
                </div>
        <?php endif; ?>
    </div>
</div>   
<div class="block-customer-login customer_account" x-show="openRegister">
    <h2 id="authenticate-customer-login" class="text-size18 font-medium text-darkblack">
        <?php //echo $escaper->escapeHtml(__('Create New Customer Account')) ?>
    </h2>
    <form class="form create account form-create-account"
          method="post" id="create-form" enctype="multipart/form-data"
        action="<?= $escaper->escapeUrl($block->getUrl('customer/account/createpost')) ?>">
         <?= /* @noEscape */ $block->getBlockHtml('formkey') ?>
        <?= $block->getChildHtml('form_fields_before') ?>
        <div class="md:grid">
            <fieldset class="">
                <legend class="contents">
                    <span>
                        <?= $escaper->escapeHtml(__('Personal Information')) ?>
                    </span>
                </legend>
                <input type="hidden" name="success_url" value="<?= $escaper->escapeUrl($block->getSuccessUrl()) ?>">
                <input type="hidden" name="error_url" value="<?= $escaper->escapeUrl($block->getErrorUrl()) ?>">
                <div class="field field-reserved w-full field-name-firstname required">
                    <label class="label" for="firstname">
                        <span> <?= $escaper->escapeHtml(__('First Name')) ?></span>
                    </label>
                    <div class="control">
                        <input type="text" id="firstname" name="firstname" placeholder="<?= $escaper->escapeHtml(__('First Name')) ?>" value="" required="" title="First Name" class="form-input required-entry">
                    </div>
                </div>
                <div class="field field-reserved w-full field-name-firstname required">
                    <label class="label" for="firstname">
                        <span> <?= $escaper->escapeHtml(__('Last Name')) ?></span>
                    </label>
                    <div class="control">
                        <input type="text" id="lastname" name="lastname" placeholder="<?= $escaper->escapeHtml(__('Last Name')) ?>" value="" required="" title="Last Name" class="form-input required-entry">
                    </div>
                </div>
                <?php if ($block->isNewsletterEnabled()): ?>
                    <div class="field choice newsletter">
                        <input type="checkbox" name="is_subscribed"
                               title="<?= $escaper->escapeHtmlAttr(__('Sign Up for Newsletter')) ?>" value="1"
                               id="is_subscribed"
                            <?php if ($block->getFormData()->getIsSubscribed()): ?>
                                checked="checked"
                            <?php endif; ?>
                               class="checkbox">
                        <label for="is_subscribed" class="label">
                            <span>
                                <?= $escaper->escapeHtml(__('Sign Up for Newsletter')) ?>
                            </span>
                        </label>
                    </div>
                    <?php /* Extensions placeholder */ ?>
                    <?= $block->getChildHtml('customer.form.register.newsletter') ?>
                <?php endif ?>

                <?php $dob = $block->getLayout()->createBlock(Dob::class) ?>
                <?php if ($dob->isEnabled()): ?>
                    <?= $dob->setDate($block->getFormData()->getDob())->toHtml() ?>
                <?php endif ?>

                <?php $taxvat = $block->getLayout()->createBlock(Taxvat::class) ?>
                <?php if ($taxvat->isEnabled()): ?>
                    <?= $taxvat->setTaxvat($block->getFormData()->getTaxvat())->toHtml() ?>
                <?php endif ?>

                <?php $gender = $block->getLayout()->createBlock(Gender::class) ?>
                <?php if ($gender->isEnabled()): ?>
                    <?= $gender->setGender($block->getFormData()->getGender())->toHtml() ?>
                <?php endif ?>
                <?= $block->getChildHtml('fieldset_create_info_additional') ?>
            </fieldset>
            <fieldset class="sign_info">
                <legend class="contents">
                    <span>
                        <?= $escaper->escapeHtml(__('Sign-in Information')) ?></span>
                </legend>
                <div class="field required">
                    <label for="email_address" class="label">
                        <span>
                            <?= $escaper->escapeHtml(__('Email')) ?>
                        </span>
                    </label>
                    <div class="control">
                        <input type="email" name="email" placeholder="<?= $escaper->escapeHtml(__('Email address')) ?>" autocomplete="email" id="email_address" required
                               value="<?= $escaper->escapeHtmlAttr($block->getFormData()->getEmail()) ?>"
                               title="<?= $escaper->escapeHtmlAttr(__('Email')) ?>" class="form-input" placeholder="Email address" />
                    </div>
                </div>
                <div class="field">
                    <label for="password" class="label"><span><?= $escaper->escapeHtml(__('Password')) ?></span></label>
                    <div class="control">
                        <?php $minimumPasswordLength = $block->getMinimumPasswordLength() ?>
                        <input type="password" name="password" id="main-password"
                               title="<?= $escaper->escapeHtmlAttr(__('Password')) ?>"
                               minlength="<?= $escaper->escapeHtmlAttr($minimumPasswordLength) ?>"
                               class="form-input"
                               required
                               autocomplete="off"
                               placeholder="<?= $escaper->escapeHtml(__('Password')) ?>" 
                               autocomplete="off" placeholder="Password"
                        >
                    </div>
                </div>
                <div class="field">
                    <label for="password-confirmation" class="label">
                        <span>
                            <?= $escaper->escapeHtml(__('Confirm Password')) ?>
                        </span>
                    </label>
                    <div class="control" x-data>
                        <input type="password" name="password_confirmation"
                               title="<?= $escaper->escapeHtmlAttr(__('Confirm Password')) ?>"
                               id="password-confirmation"
                               @keyup="passwordsMatch()"
                               required
                               placeholder="<?= $escaper->escapeHtml(__('Confirm Password')) ?>"
                               minlength="<?= $escaper->escapeHtmlAttr($minimumPasswordLength) ?>"
                               class="form-input"
                               autocomplete="off" placeholder="Confirm Password"
                        >
                    </div>
                </div>
                <?= /* @noEscape */ $block->getBlockHtml('formkey') ?>
                <div class="field" id="pass-error" style="display:none">
                    <p class="my-4 text-red">
                        <?= $escaper->escapeHtml(__('Your password confirmation must match your password.')) ?>
                    </p>
                </div>
                <?php if ($block->getShowAddressFields()): ?>
                    <fieldset class="">
                        <p class="mb-8 font-lg text-secondary-darker">
                    <span>
                        <?= $escaper->escapeHtml(__('Address Information')) ?>
                    </span>
                        </p>
                        <input type="hidden" name="create_address" value="1"/>

                        <?php $company = $block->getLayout()->createBlock(\Magento\Customer\Block\Widget\Company::class) ?>
                        <?php if ($company->isEnabled()): ?>
                            <?= $company->setCompany($block->getFormData()->getCompany())->toHtml() ?>
                        <?php endif ?>

                        <?php $telephone = $block->getLayout()->createBlock(\Magento\Customer\Block\Widget\Telephone::class) ?>
                        <?php if ($telephone->isEnabled()): ?>
                            <?= $telephone->setTelephone($block->getFormData()->getTelephone())->toHtml() ?>
                        <?php endif ?>

                        <?php $fax = $block->getLayout()->createBlock(\Magento\Customer\Block\Widget\Fax::class) ?>
                        <?php if ($fax->isEnabled()): ?>
                            <?= $fax->setFax($block->getFormData()->getFax())->toHtml() ?>
                        <?php endif ?>
                        <?php $streetValidationClass =
                            $this->helper(Address::class)->getAttributeValidationClass(
                                'street'
                            ); ?>
                        <div class="field street required">
                            <label for="street_1" class="label"><span><?= /* @noEscape */
                                    $block->getAttributeData()->getFrontendLabel('street') ?></span></label>
                            <div class="control">
                                <input type="text" name="street[]"
                                       value="<?= $escaper->escapeHtmlAttr($block->getFormData()->getStreet(0)) ?>"
                                       title="<?= /* @noEscape */ $block->getAttributeData()->getFrontendLabel('street') ?>"
                                       id="street_1"
                                       class="form-input <?= $escaper->escapeHtmlAttr($streetValidationClass) ?>">
                                <div class="nested">
                                    <?php $streetValidationClass =
                                        trim(str_replace('required-entry', '', $streetValidationClass)); ?>
                                    <?php for ($i = 2, $n = $this->helper(Address::class)->getStreetLines(); $i <= $n; $i++): ?>
                                        <div class="field additional">
                                            <label class="label" for="street_<?= /* @noEscape */ $i ?>">
                                                <span><?= $escaper->escapeHtml(__('Address')) ?></span>
                                            </label>
                                            <div class="control">
                                                <input type="text" name="street[]"
                                                       value="<?= $escaper->escapeHtmlAttr($block
                                                           ->getFormData()
                                                           ->getStreetLine($i - 1)) ?>"
                                                       title="<?= $escaper
                                                           ->escapeHtmlAttr(__('Street Address %1', $i)) ?>"
                                                       id="street_<?= (int) $i ?>"
                                                       class="form-input <?= $escaper
                                                           ->escapeHtmlAttr($streetValidationClass) ?>"
                                                >
                                            </div>
                                        </div>
                                    <?php endfor; ?>
                                </div>
                            </div>
                        </div>

                        <div class="field required">
                            <label for="city" class="label">
                        <span>
                            <?= /* @noEscape */ $block->getAttributeData()->getFrontendLabel('city') ?>
                        </span>
                            </label>
                            <div class="control">
                                <input type="text" name="city"
                                       value="<?= $escaper->escapeHtmlAttr($block->getFormData()->getCity()) ?>"
                                       title="<?= /* @noEscape */ $block->getAttributeData()->getFrontendLabel('city') ?>"
                                       class="form-input <?= $escaper->escapeHtmlAttr($this
                                           ->helper(Address::class)
                                           ->getAttributeValidationClass('city')) ?>"
                                       id="city">
                            </div>
                        </div>

                        <div class="field region w-full"
                             x-cloak
                             x-show="isRegionRequired || showOptionalRegion"
                        >
                            <label class="label" for="region_id">
                                <span><?= /* @noEscape */ $region ?></span>
                            </label>
                            <div class="control">
                                <template x-if="hasAvailableRegions() && isRegionRequired">
                                    <select id="region_id" name="region_id"
                                            title="<?= /* @noEscape */ $region ?>"
                                            class="form-select validate-select region_id"
                                            :required="isRegionRequired"
                                            x-ref="region_id"
                                            x-model="selectedRegion"
                                    >
                                        <option value=""><?= $escaper->escapeHtml(__($selectRegion)) ?></option>
                                        <template x-for="regionId in Object.keys(availableRegions)">
                                            <option :value="regionId"
                                                    :name="availableRegions[regionId].name"
                                                    x-text="availableRegions[regionId].name"
                                                    :selected="selectedRegion === regionId"
                                            >
                                            </option>
                                        </template>
                                    </select>
                                </template>
                                <template x-if="!hasAvailableRegions()">
                                    <input type="text"
                                           id="region"
                                           name="region"
                                           x-ref="region"
                                           value="<?= $escaper->escapeHtmlAttr($block->getRegion()) ?>"
                                           title="<?= /* @noEscape */ $region ?>"
                                           class="form-input"
                                           :required="isRegionRequired"
                                    />
                                </template>
                            </div>
                        </div>

                        <div class="field zip required">
                            <label for="zip" class="label"><span><?= /* @noEscape */
                                    $block->getAttributeData()->getFrontendLabel('postcode') ?></span></label>
                            <div class="control">
                                <input type="text"
                                       name="postcode"
                                       value="<?= $escaper->escapeHtmlAttr($block->getFormData()->getPostcode()) ?>"
                                       title="<?= /* @noEscape */ $block->getAttributeData()->getFrontendLabel('postcode') ?>"
                                       id="zip"
                                       class="form-input validate-zip-international
                                    <?= $escaper->escapeHtmlAttr(
                                           $this->helper(Address::class)->getAttributeValidationClass(
                                               'postcode'
                                           )
                                       ) ?>">
                            </div>
                        </div>

                        <div class="field country required">
                            <label for="country" class="label"><span><?= /* @noEscape */
                                    $block->getAttributeData()->getFrontendLabel('country_id') ?></span></label>
                            <div class="control">
                                <?php $countries = $block
                                    ->getCountryCollection()
                                    ->setForegroundCountries($block->getTopDestinations())
                                    ->toOptionArray();
                                ?>
                                <select name="country_id"
                                        id="country"
                                        title="Country"
                                        required="required"
                                        class="form-select"
                                        x-ref="country_id"
                                        @change="changeCountry($event.target)"
                                >
                                    <?php foreach ($countries as $country): ?>
                                        <option name="<?= /** @noEscape */ $country['label'] ?>"
                                                value="<?= /** @noEscape */ $country['value'] ?>"
                                                data-is-zip-required="<?= (isset($country['is_zipcode_optional'])) ? '0' : '1' ?>"
                                                data-is-region-required="<?= (isset($country['is_region_required'])) ? '1' : '0' ?>"
                                            <?= ($block->getCountryId() ===  $country['value']) ? 'selected="selected"' : '' ?>
                                        >
                                            <?= /** @noEscape */ $country['label'] ?>
                                        </option>
                                    <?php endforeach; ?>
                                </select>
                            </div>
                        </div>
                        <?php $addressAttributes = $block->getChildBlock('customer_form_address_user_attributes'); ?>
                        <?php if ($addressAttributes): ?>
                            <?php $addressAttributes->setEntityType('customer_address'); ?>
                            <?php $addressAttributes->setFieldIdFormat('address:%1$s')->setFieldNameFormat(
                                'address[%1$s]'
                            ); ?>
                            <?php $block->restoreSessionData($addressAttributes->getMetadataForm(), 'address'); ?>
                            <?= $addressAttributes->setShowContainer(false)->toHtml() ?>
                        <?php endif; ?>
                        <input type="hidden" name="default_billing" value="1">
                        <input type="hidden" name="default_shipping" value="1">
                    </fieldset>
                <?php endif; ?>
                <?= $block->getChildHtml('form_additional_info') ?>
            </fieldset>
        </div> 
        <div class="field choice showPassword" x-data>
            <input type="checkbox" name="register-show-password" @click="showRegisterPassword()" id="register-show-password" value="" class="checkbox">
            <label class="cursor-pointer" style="margin:0;" for="register-show-password">Show password</label>            
            <!-- <span class="cursor-pointer text-size12 font-normal text-darkblack" @click="showRegisterPasswordForLable()" id="show-password-label" >
                <?= $escaper->escapeHtml(__('Show Password')) ?> 
            </span> -->
        </div> 
        <input type="hidden" name="customer[assistance_allowed_checkbox]" value="1" />
        <div class="actions-toolbar flex">
            <div class="primary">
                <button type="submit" class="action submit primary btn btn-primary"
                        title="<?= $escaper->escapeHtmlAttr(__('Create an Account')) ?>">
                    <span><?= $escaper->escapeHtml(
                            __('Create an Account')
                        ) ?>
                    </span>
                </button>
            </div>
        </div>
    </form>
</div>
<script>
 function passwordsMatch() {
        console.log("passwordsMatch");
        if (document.getElementById('main-password').value ===
            document.getElementById('password-confirmation').value) {
            document.getElementById('pass-error').style.display='none';
            return true;
        } else {
            document.getElementById('pass-error').style.display='block';
            return false;
        }
    }
    function bssButtonSocial() {
        return {
            renderShowmore : function (element) {
                var socialButton = element.querySelector('.sociallogin-clearfix').getElementsByTagName("li");
                for (let i = 0; i <= socialButton.length - 1; i++) {
                    socialButton[i].style.display = 'block';
                }
                element.querySelector('.sociallogin-showmore').style.display = 'none';
            },
            popupSocial: function (element) {
                var href = element.getAttribute('data-href');
                var width = element.getAttribute('data-width');
                var height = element.getAttribute('data-height');
                var popup_window = null;
                if (!width) {
                    width = 650;
                }

                if(!height) {
                    height = 350;
                }

                var left = parseInt((window.innerWidth- width) / 2);
                var top = parseInt((window.innerHeight - height) / 2);

                var params = [
                    'resizable=yes',
                    'scrollbars=no',
                    'toolbar=no',
                    'menubar=no',
                    'location=no',
                    'directories=no',
                    'status=yes',
                    'width='+ width,
                    'height='+ height,
                    'left='+ left,
                    'top='+ top
                ];

                if(popup_window) {
                    popup_window.close();
                }

                if(href) {
                    popup_window = window.open(href,'',params.join(','));
                    popup_window.focus();

                }else{
                    alert('This Login Application was not configured correctly. Please contact our customer support.');
                }
                return false;
            }
        }
    }
    function showRegisterPassword(){
        console.log("show Passowrd ");
        var showPwd=document.getElementById("register-show-password");
        var password=document.getElementById("main-password");
        var confirm_password=document.getElementById("password-confirmation");
        if(showPwd.checked==true) {
            password.type="text";
            confirm_password.type="text";
        } else {
        password.type="password";
        confirm_password.type="password";
        }
    }    
    function showRegisterPasswordForLable(){
        console.log("show Passowrd ");
        var password=document.getElementById("main-password");
        var confirm_password=document.getElementById("password-confirmation");
        if (password.type === "password") {
            password.type = "text";
            confirm_password.type = "text";
        } else {
            password.type = "password";
            confirm_password.type = "password";
        }
    } 

</script>